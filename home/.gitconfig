[alias] # shortcut
  aliases = !git config --get-regexp alias
  br     = branch
  ci     = commit
  co     = checkout
  co-pr  = !git checkout-pullrequest
  di     = diff
  graph  = log --graph -C -M --pretty=format:'<%h> %ad [%an] %Cgreen%d%Creset %s' --all --date=short
  mb     = !git merged-branch
  me     = !git config --get-regexp user
  st     = status
[alias] # functional
  checkout-pullrequest = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
  ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"
  merged-branch = "!f() { git fetch --prune --quiet; git branch --merged | egrep -v '^\\*' | egrep -v 'master$' ; }; f"
  log-prs = "!f() { hash=`git log -n 1 --pretty='%H' $1`; git log --merges --reverse --ancestry-path ${hash}...master --grep 'Merge pull request #'; }; f"
  show-pr = "!f() { hash=`git log -n 1 --pretty='%H' $1`; git log --merges --oneline --reverse --ancestry-path ${hash}...master | grep 'Merge pull request #' | head -n 1; }; f"
	open-pr = "!f() { hash=`git log -n 1 --pretty='%H' $1`; hub browse -- `git log --merges --oneline --reverse --ancestry-path ${hash}...master | grep 'Merge pull request #' | head -n 1 | cut -f5 -d' ' | sed -e 's%#%pull/%'`; }; f"
  pr-branches = "!git branch --list 'pr/*' | egrep -vE '^\\*'"
[color]
  branch      = auto
  diff        = auto
  interactive = auto
  status      = auto
  ui = auto
[push]
  default = simple
[core]
  editor = vim
  excludesfile = ~/.gitignore
[credential]
  helper = osxkeychain
[fetch]
  prune = true
[user]
	useConfigOnly = true
[include]
	path = ~/.local/.gitconfig
[merge]
	ff = no
	commit = no
[pull]
	ff = yes
[commit]
	verbose = true # 2.9.0 or later
