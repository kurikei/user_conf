[alias] # shortcut
  aliases = !git config --get-regexp alias
  br     = branch
  ci     = commit
  co     = checkout
  co-pr  = !git checkout-pullrequest
  di     = diff
  graph  = log --graph -C -M --pretty=format:'<%h> %ad [%an] %Cgreen%d%Creset %s' --all --date=short
  mb     = !git merged-branch
  me     = !git config --get-regexp user
  st     = status
[alias] # functional
  checkout-pullrequest = !sh -c 'git fetch origin pull/$1/head:pr/$1 && git checkout pr/$1' -
  checkout-tag = !sh -c 'git fetch && git checkout -b tag/$1 refs/tags/$1' -
  checkout-latest-tag = "!f() { git fetch --quiet; git checkout-tag `git latest-tag`;}; f"
  commish = "!f() { git commit -au -m \"$1\" && git pull && git push; }; f"
  latest-tag = !git tag -l | sort -r | head -1
  delete-latest-stash = "stash drop stash@{0}"
  delete-temporary-branches = "!git temporary-branches | xargs git branch -D"
  ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"
  imitate-conflict = "!f() { merged=$(git rev-list --parents -n 1 $1 | cut -d' ' -f1 ); parent1=$(git rev-list --parents -n 1 $1 | cut -d' ' -f2 ); parent2=$(git rev-list --parents -n 1 $1 | cut -d' ' -f3 ); git checkout $parent1 -b conflict/$merged; git merge $parent2 ; }; f"
  merged-branch = "!f() { git fetch --prune --quiet; git branch --merged | egrep -v '^\\*' | egrep -v 'master$' ; }; f"
  log-prs = "!f() { hash=`git log -n 1 --pretty='%H' $1`; git log --merges --reverse --ancestry-path ${hash}...master --grep 'Merge pull request #'; }; f"
  show-pr = "!f() { hash=`git log -n 1 --pretty='%H' $1`; git log --merges --oneline --reverse --ancestry-path ${hash}...master | grep 'Merge pull request #' | head -n 1; }; f"
  replace-https-to-ssh = "!f() { remote=`git remote get-url origin`; if [[ \"$remote\" =~ ^https ]]; then git remote set-url origin ${remote/https:\\/\\/github.com\\//git@github.com:};else echo \"already ssh. $remote\";fi  ; }; f"
	open-pr = "!f() { hash=`git log -n 1 --pretty='%H' $1`; hub browse -- `git log --merges --oneline --reverse --ancestry-path ${hash}...master | grep 'Merge pull request #' | head -n 1 | cut -f5 -d' ' | sed -e 's%#%pull/%'`; }; f"
  pr-branches = "!git branch --list 'pr/*' | egrep -vE '^\\*'"
  set-remote-pr ="!git config --add remote.pr.url `git config --get remote.origin.url`; git config --add remote.pr.fetch +refs/pull/*:refs/remotes/pr/*"
  show-latest-stash = "show stash@{0}"
  temporary-branches = "!git branch --list 'pr/*' --list 'conflict/*' --list 'tag/*' | egrep -vE '^\\*'"
[color]
  branch      = auto
  diff        = auto
  interactive = auto
  status      = auto
  ui = auto
[commit]
  verbose = true # 2.9.0 or later
[core]
  editor = vim
  excludesfile = ~/.gitignore
[credential]
  helper = osxkeychain
[fetch]
  prune = true
[include]
  path = ~/.local/.gitconfig
[merge]
  ff = no
  commit = no
[pull]
  ff = yes
[push]
  default = simple
[user]
  useConfigOnly = true
[pager]
	diff = diff-highlight | less
	log = diff-highlight | less
	show = diff-highlight | less
[interactive]
	diffFilter = diff-highlight
[diff]
	compactionHeuristic = true # 2.9.0 or later
